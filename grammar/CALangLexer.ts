// Generated from src/CALang.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class CALangLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly T__7 = 8;
	public static readonly T__8 = 9;
	public static readonly T__9 = 10;
	public static readonly WS = 11;
	public static readonly String = 12;
	public static readonly Number = 13;
	public static readonly Boolean = 14;
	public static readonly Mnemonic = 15;
	public static readonly Ident = 16;
	public static readonly LineComment = 17;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "WS", "String", "Number", "Boolean", "Mnemonic", "Ident", "LineComment",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'$'", "','", "'.'", "'#'", "'@'", "':'", "'{'", "'}'", "'['", 
		"']'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, undefined, undefined, undefined, "WS", "String", "Number", 
		"Boolean", "Mnemonic", "Ident", "LineComment",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(CALangLexer._LITERAL_NAMES, CALangLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return CALangLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(CALangLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "CALang.g4"; }

	// @Override
	public get ruleNames(): string[] { return CALangLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return CALangLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return CALangLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return CALangLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x13\xC0\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v" +
		"\x03\v\x03\f\x06\f;\n\f\r\f\x0E\f<\x03\f\x03\f\x03\r\x03\r\x07\rC\n\r" +
		"\f\r\x0E\rF\v\r\x03\r\x03\r\x03\x0E\x06\x0EK\n\x0E\r\x0E\x0E\x0EL\x03" +
		"\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x05" +
		"\x0FX\n\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x05\x10\xB1" +
		"\n\x10\x03\x11\x06\x11\xB4\n\x11\r\x11\x0E\x11\xB5\x03\x12\x03\x12\x07" +
		"\x12\xBA\n\x12\f\x12\x0E\x12\xBD\v\x12\x03\x12\x03\x12\x02\x02\x02\x13" +
		"\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02" +
		"\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D" +
		"\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13\x03\x02\x07\x05\x02\v\f\x0F\x0F" +
		"\"\"\x03\x02$$\x03\x022;\x07\x02//2;C\\aac|\x04\x02\f\f\x0F\x0F\x02\xE1" +
		"\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02" +
		"\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02" +
		"\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02" +
		"\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02" +
		"\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02" +
		"!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x03%\x03\x02\x02\x02\x05\'\x03" +
		"\x02\x02\x02\x07)\x03\x02\x02\x02\t+\x03\x02\x02\x02\v-\x03\x02\x02\x02" +
		"\r/\x03\x02\x02\x02\x0F1\x03\x02\x02\x02\x113\x03\x02\x02\x02\x135\x03" +
		"\x02\x02\x02\x157\x03\x02\x02\x02\x17:\x03\x02\x02\x02\x19@\x03\x02\x02" +
		"\x02\x1BJ\x03\x02\x02\x02\x1DW\x03\x02\x02\x02\x1F\xB0\x03\x02\x02\x02" +
		"!\xB3\x03\x02\x02\x02#\xB7\x03\x02\x02\x02%&\x07&\x02\x02&\x04\x03\x02" +
		"\x02\x02\'(\x07.\x02\x02(\x06\x03\x02\x02\x02)*\x070\x02\x02*\b\x03\x02" +
		"\x02\x02+,\x07%\x02\x02,\n\x03\x02\x02\x02-.\x07B\x02\x02.\f\x03\x02\x02" +
		"\x02/0\x07<\x02\x020\x0E\x03\x02\x02\x0212\x07}\x02\x022\x10\x03\x02\x02" +
		"\x0234\x07\x7F\x02\x024\x12\x03\x02\x02\x0256\x07]\x02\x026\x14\x03\x02" +
		"\x02\x0278\x07_\x02\x028\x16\x03\x02\x02\x029;\t\x02\x02\x02:9\x03\x02" +
		"\x02\x02;<\x03\x02\x02\x02<:\x03\x02\x02\x02<=\x03\x02\x02\x02=>\x03\x02" +
		"\x02\x02>?\b\f\x02\x02?\x18\x03\x02\x02\x02@D\x07$\x02\x02AC\n\x03\x02" +
		"\x02BA\x03\x02\x02\x02CF\x03\x02\x02\x02DB\x03\x02\x02\x02DE\x03\x02\x02" +
		"\x02EG\x03\x02\x02\x02FD\x03\x02\x02\x02GH\x07$\x02\x02H\x1A\x03\x02\x02" +
		"\x02IK\t\x04\x02\x02JI\x03\x02\x02\x02KL\x03\x02\x02\x02LJ\x03\x02\x02" +
		"\x02LM\x03\x02\x02\x02M\x1C\x03\x02\x02\x02NO\x07v\x02\x02OP\x07t\x02" +
		"\x02PQ\x07w\x02\x02QX\x07g\x02\x02RS\x07h\x02\x02ST\x07c\x02\x02TU\x07" +
		"n\x02\x02UV\x07u\x02\x02VX\x07g\x02\x02WN\x03\x02\x02\x02WR\x03\x02\x02" +
		"\x02X\x1E\x03\x02\x02\x02YZ\x07n\x02\x02Z[\x07g\x02\x02[\xB1\x07c\x02" +
		"\x02\\]\x07n\x02\x02]^\x07f\x02\x02^\xB1\x07e\x02\x02_`\x07o\x02\x02`" +
		"a\x07q\x02\x02a\xB1\x07x\x02\x02bc\x07i\x02\x02cd\x07g\x02\x02d\xB1\x07" +
		"v\x02\x02ef\x07u\x02\x02fg\x07g\x02\x02g\xB1\x07v\x02\x02hi\x07r\x02\x02" +
		"ij\x07u\x02\x02j\xB1\x07j\x02\x02kl\x07r\x02\x02lm\x07q\x02\x02m\xB1\x07" +
		"r\x02\x02no\x07c\x02\x02op\x07f\x02\x02p\xB1\x07f\x02\x02qr\x07u\x02\x02" +
		"rs\x07w\x02\x02s\xB1\x07d\x02\x02tu\x07o\x02\x02uv\x07w\x02\x02v\xB1\x07" +
		"n\x02\x02wx\x07f\x02\x02xy\x07k\x02\x02y\xB1\x07x\x02\x02z{\x07o\x02\x02" +
		"{|\x07q\x02\x02|\xB1\x07f\x02\x02}~\x07z\x02\x02~\x7F\x07q\x02\x02\x7F" +
		"\xB1\x07t\x02\x02\x80\x81\x07c\x02\x02\x81\x82\x07p\x02\x02\x82\xB1\x07" +
		"f\x02\x02\x83\x84\x07d\x02\x02\x84\x85\x07q\x02\x02\x85\xB1\x07t\x02\x02" +
		"\x86\x87\x07p\x02\x02\x87\x88\x07q\x02\x02\x88\xB1\x07v\x02\x02\x89\x8A" +
		"\x07k\x02\x02\x8A\x8B\x07p\x02\x02\x8B\xB1\x07x\x02\x02\x8C\x8D\x07p\x02" +
		"\x02\x8D\x8E\x07g\x02\x02\x8E\xB1\x07i\x02\x02\x8F\x90\x07d\x02\x02\x90" +
		"\x91\x07g\x02\x02\x91\xB1\x07s\x02\x02\x92\x93\x07d\x02\x02\x93\x94\x07" +
		"p\x02\x02\x94\xB1\x07g\x02\x02\x95\x96\x07d\x02\x02\x96\x97\x07i\x02\x02" +
		"\x97\xB1\x07v\x02\x02\x98\x99\x07d\x02\x02\x99\x9A\x07n\x02\x02\x9A\xB1" +
		"\x07v\x02\x02\x9B\x9C\x07d\x02\x02\x9C\x9D\x07i\x02\x02\x9D\xB1\x07g\x02" +
		"\x02\x9E\x9F\x07d\x02\x02\x9F\xA0\x07n\x02\x02\xA0\xB1\x07g\x02\x02\xA1" +
		"\xA2\x07l\x02\x02\xA2\xA3\x07u\x02\x02\xA3\xB1\x07t\x02\x02\xA4\xA5\x07" +
		"l\x02\x02\xA5\xA6\x07h\x02\x02\xA6\xB1\x07p\x02\x02\xA7\xA8\x07e\x02\x02" +
		"\xA8\xA9\x07v\x02\x02\xA9\xB1\x07t\x02\x02\xAA\xAB\x07t\x02\x02\xAB\xAC" +
		"\x07g\x02\x02\xAC\xB1\x07v\x02\x02\xAD\xAE\x07f\x02\x02\xAE\xAF\x07d\x02" +
		"\x02\xAF\xB1\x07i\x02\x02\xB0Y\x03\x02\x02\x02\xB0\\\x03\x02\x02\x02\xB0" +
		"_\x03\x02\x02\x02\xB0b\x03\x02\x02\x02\xB0e\x03\x02\x02\x02\xB0h\x03\x02" +
		"\x02\x02\xB0k\x03\x02\x02\x02\xB0n\x03\x02\x02\x02\xB0q\x03\x02\x02\x02" +
		"\xB0t\x03\x02\x02\x02\xB0w\x03\x02\x02\x02\xB0z\x03\x02\x02\x02\xB0}\x03" +
		"\x02\x02\x02\xB0\x80\x03\x02\x02\x02\xB0\x83\x03\x02\x02\x02\xB0\x86\x03" +
		"\x02\x02\x02\xB0\x89\x03\x02\x02\x02\xB0\x8C\x03\x02\x02\x02\xB0\x8F\x03" +
		"\x02\x02\x02\xB0\x92\x03\x02\x02\x02\xB0\x95\x03\x02\x02\x02\xB0\x98\x03" +
		"\x02\x02\x02\xB0\x9B\x03\x02\x02\x02\xB0\x9E\x03\x02\x02\x02\xB0\xA1\x03" +
		"\x02\x02\x02\xB0\xA4\x03\x02\x02\x02\xB0\xA7\x03\x02\x02\x02\xB0\xAA\x03" +
		"\x02\x02\x02\xB0\xAD\x03\x02\x02\x02\xB1 \x03\x02\x02\x02\xB2\xB4\t\x05" +
		"\x02\x02\xB3\xB2\x03\x02\x02\x02\xB4\xB5\x03\x02\x02\x02\xB5\xB3\x03\x02" +
		"\x02\x02\xB5\xB6\x03\x02\x02\x02\xB6\"\x03\x02\x02\x02\xB7\xBB\x07=\x02" +
		"\x02\xB8\xBA\n\x06\x02\x02\xB9\xB8\x03\x02\x02\x02\xBA\xBD\x03\x02\x02" +
		"\x02\xBB\xB9\x03\x02\x02\x02\xBB\xBC\x03\x02\x02\x02\xBC\xBE\x03\x02\x02" +
		"\x02\xBD\xBB\x03\x02\x02\x02\xBE\xBF\b\x12\x02\x02\xBF$\x03\x02\x02\x02" +
		"\n\x02<DLW\xB0\xB5\xBB\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!CALangLexer.__ATN) {
			CALangLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(CALangLexer._serializedATN));
		}

		return CALangLexer.__ATN;
	}

}

